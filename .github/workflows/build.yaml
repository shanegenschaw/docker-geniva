name: Docker build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

defaults:
  run:
    shell: bash

env:
  REGISTRY: docker.io
  DOCKERHUB_USERNAME: genschsa
  REPO_NAME: ${{ github.event.repository.name }}

jobs:
  build:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ${{ env.REPO_NAME }}:build

      - name: Test
        run: |
          docker run -d --name app -p 8081:80 "${REPO_NAME}:build"
          sleep 1
          test '200' = $(curl --write-out '%{http_code}' --silent --output /dev/null  localhost:8081)
          docker rm -f app

      - name: Check version bump
        run: |
          echo "Fetching origin/main"
          git fetch --depth=1 origin main
          echo "Diffing package.json version"
          test '0' -lt $(git diff origin/main -- package.json | grep '"version":' | wc -l)

  publish:
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up environment
        run: |
          APP_VERSION=$(jq -r .version package.json)
          APP_VERSION_MAJOR=$(jq -r '.version | split(".")[0]' package.json)
          APP_VERSION_MINOR=$(jq -r '.version | split(".")[1]' package.json)
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "APP_VERSION_MAJOR=$APP_VERSION_MAJOR" >> $GITHUB_ENV
          echo "APP_VERSION_MINOR=$APP_VERSION_MINOR" >> $GITHUB_ENV
          echo "IMAGE_REPOSITORY=$REGISTRY/$DOCKERHUB_USERNAME/$REPO_NAME" >> $GITHUB_ENV

      - name: Push version tag
        uses: actions-ecosystem/action-push-tag@v1
        with:
          tag: v${{ env.APP_VERSION }}
          message: "Release v${{ env.APP_VERSION }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.IMAGE_REPOSITORY }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest
            type=raw,value=${{ env.APP_VERSION }}
            type=raw,value=${{ env.APP_VERSION_MAJOR}}.${{ env.APP_VERSION_MINOR}}
            type=raw,value=${{ env.APP_VERSION_MAJOR}}

      - name: Login to Docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64,linux/arm/v6,linux/arm/v7
