name: Docker build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

defaults:
  run:
    shell: bash

env:
  REPO_NAME: ${{ github.event.repository.name }}

jobs:

  build:

    runs-on: ubuntu-20.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Set up environment
        run: |
          APP_VERSION=$(jq -r .version package.json)
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "IMAGE_REPOSITORY=genschsa/$REPO_NAME" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.IMAGE_REPOSITORY }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=raw,value=latest
            type=raw,value=${{ env.APP_VERSION }}

      - name: Docker build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Test
        run: |
          docker run -d --name app -p 8081:80 "${IMAGE_REPOSITORY}:${APP_VERSION}"
          sleep 1
          test '200' = $(curl --write-out '%{http_code}' --silent --output /dev/null  localhost:8081)
          docker rm -f app

      - name: Check version bump
        if: github.event_name == 'pull_request'
        run: |
          echo "Fetching origin/main"
          git fetch --depth=1 origin main
          echo "Diffing package.json version"
          GIT_DIFF=$(git diff origin/main -- package.json)
          echo $GIT_DIFF
          echo "Counting version changes"
          NUM_DIFFS=$(git diff origin/main -- package.json | grep '"version":' | wc -l)
          echo "Checking diffs $NUM_DIFFS"
          if [ "$NUM_DIFFS" != 2 ]; then
            echo "Version bump not detected in package.json."
            exit 1
          fi
